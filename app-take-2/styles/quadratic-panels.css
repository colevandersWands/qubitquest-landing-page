/*
 * Quadratic Fluency Interface
 * Four-panel layout for plainspeak ‚Üî code ‚Üî circuit ‚Üî notation
 */

/* Main Quadratic Workspace */
.quadratic-workspace {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    gap: var(--space-md);
    min-height: 600px;
    height: calc(100vh - 300px);
    margin-bottom: var(--space-xl);
}

/* Individual Representation Panels */
.representation-panel {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-lg);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    transition: all var(--transition-normal);
    position: relative;
}

.representation-panel:hover {
    border-color: var(--border-accent);
    box-shadow: var(--shadow-md);
}

/* Panel Focus States for Contextual Entry */
.representation-panel.entry-focused {
    border-color: var(--quantum-blue);
    box-shadow: 0 0 0 3px rgba(78, 205, 196, 0.2);
    transform: scale(1.02);
    z-index: var(--z-base) + 1;
}

.representation-panel.entry-locked {
    opacity: 0.6;
    pointer-events: none;
    filter: grayscale(0.5);
}

.representation-panel.entry-unlocking {
    animation: unlockPanel var(--transition-slow) ease-out;
}

@keyframes unlockPanel {
    0% {
        opacity: 0.6;
        filter: grayscale(0.5);
        transform: scale(0.98);
    }
    100% {
        opacity: 1;
        filter: grayscale(0);
        transform: scale(1);
    }
}

/* Panel Headers */
.panel-header {
    background: var(--bg-tertiary);
    border-bottom: 1px solid var(--border-color);
    padding: var(--space-md);
    display: flex;
    justify-content: space-between;
    align-items: center;
    min-height: 60px;
}

.panel-title {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-accent);
}

.panel-controls {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
}

.panel-btn {
    background: none;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--space-xs);
    cursor: pointer;
    transition: all var(--transition-fast);
    color: var(--text-secondary);
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.panel-btn:hover {
    background: var(--bg-accent);
    border-color: var(--border-accent);
    color: var(--text-primary);
}

.panel-btn .icon {
    font-size: 14px;
}

/* Panel Content Areas */
.panel-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.content-area {
    flex: 1;
    padding: var(--space-md);
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

.content-editor {
    flex: 1;
    border: none;
    background: transparent;
    color: var(--text-primary);
    font-size: 0.875rem;
    line-height: 1.5;
    resize: none;
    outline: none;
    padding: 0;
}

.content-editor:focus {
    box-shadow: none;
}

/* Panel Footers */
.panel-footer {
    border-top: 1px solid var(--border-color);
    background: var(--bg-tertiary);
    padding: var(--space-sm) var(--space-md);
    min-height: 50px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Specific Panel Styling */

/* Business Communication Panel */
.plainspeak-panel {
    border-left: 3px solid var(--quantum-green);
}

.plainspeak-panel .panel-title::before {
    content: "üíº ";
    margin-right: var(--space-xs);
}

.plainspeak-editor {
    font-family: var(--font-primary);
    line-height: 1.6;
}

.audience-selector {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    font-size: 0.75rem;
}

.audience-selector label {
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.audience-selector select {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--space-xs) var(--space-sm);
    color: var(--text-primary);
    font-size: 0.75rem;
}

/* Code Implementation Panel */
.code-panel {
    border-left: 3px solid var(--quantum-blue);
}

.code-panel .panel-title::before {
    content: "‚öóÔ∏è ";
    margin-right: var(--space-xs);
}

.code-editor-container {
    flex: 1;
    position: relative;
    background: var(--bg-primary);
    border-radius: var(--border-radius);
    overflow: hidden;
}

.code-editor {
    font-family: var(--font-mono);
    font-size: 0.8rem;
    line-height: 1.4;
    background: var(--bg-primary);
    color: var(--quantum-blue);
    padding: var(--space-md);
    border-radius: var(--border-radius);
}

.code-output {
    display: flex;
    flex-direction: column;
    max-height: 100px;
    overflow-y: auto;
}

.output-header {
    font-size: 0.75rem;
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: var(--space-xs);
}

.output-content {
    font-family: var(--font-mono);
    font-size: 0.75rem;
    color: var(--quantum-green);
    background: var(--bg-primary);
    padding: var(--space-sm);
    border-radius: var(--border-radius);
    border: 1px solid var(--border-color);
}

/* Circuit Design Panel */
.circuit-panel {
    border-left: 3px solid var(--quantum-purple);
}

.circuit-panel .panel-title::before {
    content: "‚öõÔ∏è ";
    margin-right: var(--space-xs);
}

.circuit-designer {
    flex: 1;
    background: var(--bg-primary);
    border-radius: var(--border-radius);
    position: relative;
    overflow: auto;
}

.circuit-workspace {
    min-height: 300px;
    padding: var(--space-lg);
    position: relative;
}

.qubit-lines {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
    min-width: 600px;
}

.qubit-line {
    display: flex;
    align-items: center;
    height: 40px;
    position: relative;
}

.qubit-label {
    font-family: var(--font-math);
    font-size: 1rem;
    color: var(--text-secondary);
    min-width: 40px;
    text-align: center;
}

.qubit-wire {
    flex: 1;
    height: 2px;
    background: var(--border-accent);
    margin-left: var(--space-md);
    position: relative;
}

.gate-palette {
    display: flex;
    gap: var(--space-xs);
    flex-wrap: wrap;
}

.gate-btn {
    background: var(--bg-primary);
    border: 1px solid var(--quantum-purple);
    border-radius: var(--border-radius);
    padding: var(--space-xs) var(--space-sm);
    color: var(--quantum-purple);
    font-family: var(--font-math);
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-fast);
    min-width: 40px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.gate-btn:hover {
    background: var(--quantum-purple);
    color: var(--bg-primary);
    transform: translateY(-1px);
}

.gate-btn.selected {
    background: var(--quantum-purple);
    color: var(--bg-primary);
}

/* Mathematical Notation Panel */
.notation-panel {
    border-left: 3px solid var(--quantum-orange);
}

.notation-panel .panel-title::before {
    content: "‚àë ";
    margin-right: var(--space-xs);
}

.notation-editor-container {
    flex: 1;
    display: flex;
    flex-direction: column;
}

.notation-editor {
    font-family: var(--font-mono);
    font-size: 0.8rem;
    line-height: 1.5;
    background: var(--bg-primary);
    border-radius: var(--border-radius);
    padding: var(--space-md);
    color: var(--quantum-orange);
}

.notation-preview {
    display: flex;
    flex-direction: column;
    max-height: 120px;
    overflow-y: auto;
}

.preview-header {
    font-size: 0.75rem;
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: var(--space-xs);
}

.preview-content {
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--space-md);
    font-family: var(--font-math);
    color: var(--text-primary);
    overflow-x: auto;
}

/* Mathematical notation styling */
.preview-content .MathJax {
    color: var(--text-primary) !important;
}

.preview-content mjx-container[jax="CHTML"] {
    color: var(--text-primary) !important;
}

/* Panel Synchronization Effects */
.representation-panel.syncing {
    position: relative;
}

.representation-panel.syncing::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(78, 205, 196, 0.1),
        transparent
    );
    animation: syncPulse 1s ease-in-out;
    pointer-events: none;
}

@keyframes syncPulse {
    0%, 100% { opacity: 0; }
    50% { opacity: 1; }
}

/* Translation Indicators */
.translation-arrow {
    position: absolute;
    width: 30px;
    height: 2px;
    background: var(--quantum-blue);
    top: 50%;
    transform: translateY(-50%);
    opacity: 0;
    transition: opacity var(--transition-fast);
}

.translation-arrow::after {
    content: "";
    position: absolute;
    right: 0;
    top: -3px;
    width: 0;
    height: 0;
    border-left: 8px solid var(--quantum-blue);
    border-top: 4px solid transparent;
    border-bottom: 4px solid transparent;
}

.quadratic-workspace.translating .translation-arrow {
    opacity: 1;
    animation: translateFlow 0.5s ease-in-out;
}

@keyframes translateFlow {
    0% { transform: translateY(-50%) scaleX(0); }
    100% { transform: translateY(-50%) scaleX(1); }
}

/* Horizontal arrows between panels */
.quadratic-workspace .translation-arrow.horizontal {
    left: calc(50% - 15px);
    top: 30px;
    transform: rotate(0deg);
}

.quadratic-workspace .translation-arrow.horizontal.reverse {
    transform: rotate(180deg);
}

/* Vertical arrows between panels */
.quadratic-workspace .translation-arrow.vertical {
    left: 30px;
    top: calc(50% - 1px);
    transform: rotate(90deg);
}

.quadratic-workspace .translation-arrow.vertical.reverse {
    transform: rotate(-90deg);
}

/* Error States */
.representation-panel.error {
    border-color: var(--quantum-red);
    background: rgba(225, 112, 85, 0.05);
}

.representation-panel.error .panel-title {
    color: var(--quantum-red);
}

/* Success States */
.representation-panel.success {
    border-color: var(--quantum-green);
    background: rgba(78, 205, 196, 0.05);
}

.representation-panel.success .panel-title {
    color: var(--quantum-green);
}

/* Panel Expansion for Mobile */
.representation-panel.expanded {
    position: fixed;
    top: 80px;
    left: var(--space-md);
    right: var(--space-md);
    bottom: var(--space-md);
    z-index: var(--z-modal);
    max-width: none;
    max-height: none;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-lg);
}

.representation-panel.expanded .panel-header {
    padding-right: calc(var(--space-md) + 40px);
}

.representation-panel.expanded .panel-header::after {
    content: "‚úï";
    position: absolute;
    top: var(--space-md);
    right: var(--space-md);
    width: 32px;
    height: 32px;
    background: var(--bg-accent);
    border-radius: var(--border-radius);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: var(--text-primary);
    font-weight: bold;
}

/* Accessibility Improvements */
.representation-panel:focus-within {
    border-color: var(--quantum-blue);
    box-shadow: 0 0 0 3px rgba(78, 205, 196, 0.2);
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .representation-panel {
        border-width: 2px;
    }
    
    .panel-btn {
        border-width: 2px;
    }
    
    .content-editor {
        background: var(--bg-secondary);
    }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    .representation-panel,
    .panel-btn,
    .sync-indicator,
    .translation-arrow {
        transition: none;
        animation: none;
    }
}

/* Panel interaction hints */
.representation-panel[data-hint]::before {
    content: attr(data-hint);
    position: absolute;
    top: -30px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--bg-tertiary);
    color: var(--text-primary);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius);
    font-size: 0.75rem;
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--transition-fast);
    z-index: var(--z-tooltip);
}

.representation-panel[data-hint]:hover::before {
    opacity: 1;
}